#!/usr/bin/env python
# -*- coding:utf-8 -*-
'''
1、关于break、continue 仅配合循环语句使用，单独的if 条件语句不适用，而且有多层循环时，仅影响最靠近层的循环
2、break 语句表示跳出当前循环，继续执行循环后面的语句， continue 表示终止循环的当次，继续一次循环，不终止当前循环
3、return 是立即跳出循环语句，并返回return数值，退出循环语句所在的函数，exit 表示结束整个程序，退出主函数
4、for -else：表示 如果for循环时正常结束的 则，else 将被执行，若for 中有break 或者rerurn等语句会导致for循环异常终止的时候，
else 分支也不会被执行
'''

#判断101-200之间有多少个素数，并输出所有素数。 (素数是除了能被1和他本身整除外，其他数都不可以)


#方法1：使用for-else 模式，主要用户寻找在for正常结束后 做某些操作
# list = []
# for i in range(101,201):
# 	k =0
# 	for j in range(2,i):
# 		if i%j == 0:  #一旦发现i可以被某个数整除，则跳出最里层循环，不在校验其他的j了，同时else模块也不会被执行，然后回到外层循环继续执行
# 			break
# 	else:  #如果对应的for循环时正常执行完的，则说明i不能被（2-i）里面的任何一个数整除，则说明i是个素数
# 		list.append(i)
# print(list)
#

#方法2：由于不是素数的数字很好找，因此使用排除法，把不是素数的数字 踢出序列即可
# list = list(range(101,201))
# for i in range(101,201):  #遍历时，最好用固定的序列，不要用在循环中可能对序列进行增删改的序列来控制循环
# 	for j in range(2,i):
# 		if i%j == 0:
# 			list.remove(i)
# 			break
# print(list)
# print(len(list))


#通过设置标志的方式，默认当前数字是素数标志为0 ，如果得出当前数字不是素数 则置标志为1.通过标志来的变化来判断
k = 0
for i in range(101,201):
	'''
	fg 这个变量必须放在循环内部，每次外层循环开始时，将其默认为这次的i是素数，然后执行内层循环，如果判断不是素数则，
	重置fg变量,否则 若fg的值没变 则说明他是一个素数
	'''
	fg = 0
	for j in range(2,i):
		if i%j == 0:
			fg =1  #(标识该数 不是素数)
			break  #for循环中遇见break 就跳出当前循环，继续执行后面的if 条件语句
	'''
	例如i = 101 时，j从2循环到101 都没有找到数可以被101 整除，因此for循环里面的if 语句一直没有办法执行，因此标志fg的值还是初始值
	0，是素数标志，因此输出即可，如果i= 102时，fg的值会被重置为0，然后执行内层循环，知道一个能被整数的数，所有if语句被执行，因此
	fg 备注1，然后跳出内层循环，此时继续执行 内层循环后的if 语句，由于此时fg的标志不是0，因此i不被输出，然后继续外层循环，此时
	fg 再次被重置为0
	'''
	if fg ==0:
		print(i)
		k = k+1
print('101-200之间有%d个素数' % k)








